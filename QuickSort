class quicksort
{
int sort(int[] b)
{
quick_sort(b,0,b.length-1);
for(int i=0;i<b.length;i++)
{
//System.out.println("quicksort");
System.out.print("\t"+b[i]);
}
System.out.println(" ");

return 0;
}

int[] quick_sort(int[] b,int low,int high)
{
int pivot;
//if(high>0)

if(high>low)
{
pivot=partition(b,low,high);
quick_sort(b,low,pivot-1);
quick_sort(b,pivot+1,high);
}
return b;
}
int partition(int[] b,int low,int high)
{
int left;
int right;
int pivot_element=b[low];
left=low;
right=high;
while(left<right)
{

while(left<=right && pivot_element>=b[left])
{
//System.out.println(left);
left++;
//System.out.println(left);
}
while(right>=left && pivot_element<b[right])
{
//System.out.println(right);
right--;
//System.out.println(right);
}

if(left<right&&right>0)
{

swap(b,left,right);
//left++;
//right--;
}}
//System.out.println(right);
b[low]=b[right];
b[right]=pivot_element;
System.out.println(b[right]);
return right;
}

int[] swap(int[] b,int left,int right)
{
int temp;
temp=b[left];
b[left]=b[right];
b[right]=temp;
left++;
right--;
//System.out.println("HI");
return b;
}

public static void main(String[] args)
{
quicksort q=new quicksort();
int[] B={10,12,91,23,54,82};
int[] C={3,-1,0,-30,50,-80,2,-100};
int[] D={30,60,90,20,10,-10,0};
int[] A={1,2,3,4};
int[] E={4,3,2,1};
int[] F={-100,300,-250,-300,500};
q.sort(F);
q.sort(C);
q.sort(A);
q.sort(D);
q.sort(E);
q.sort(C)
}}
